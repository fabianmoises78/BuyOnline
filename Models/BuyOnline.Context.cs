//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BuyOnline.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Datos : DbContext
    {
        public Datos()
            : base("name=Datos")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrador> Administrador { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Compra> Compra { get; set; }
        public virtual DbSet<DetalleCompra> DetalleCompra { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<ListaDeseos> ListaDeseos { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tarjeta> Tarjeta { get; set; }
        public virtual DbSet<TipoPago> TipoPago { get; set; }
    
        public virtual int ActualizarCat(string cat, Nullable<int> idc)
        {
            var catParameter = cat != null ?
                new ObjectParameter("Cat", cat) :
                new ObjectParameter("Cat", typeof(string));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCat", catParameter, idcParameter);
        }
    
        public virtual int ActualizarEstado(string estado, Nullable<int> id)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstado", estadoParameter, idParameter);
        }
    
        public virtual int ActualizarPais(string paisp, Nullable<int> id)
        {
            var paispParameter = paisp != null ?
                new ObjectParameter("paisp", paisp) :
                new ObjectParameter("paisp", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarPais", paispParameter, idParameter);
        }
    
        public virtual int ActualizarTPago(Nullable<int> idT, string pago)
        {
            var idTParameter = idT.HasValue ?
                new ObjectParameter("IdT", idT) :
                new ObjectParameter("IdT", typeof(int));
    
            var pagoParameter = pago != null ?
                new ObjectParameter("pago", pago) :
                new ObjectParameter("pago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarTPago", idTParameter, pagoParameter);
        }
    
        public virtual int AgregarCat(string ncat)
        {
            var ncatParameter = ncat != null ?
                new ObjectParameter("Ncat", ncat) :
                new ObjectParameter("Ncat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarCat", ncatParameter);
        }
    
        public virtual ObjectResult<BuscarCat_Result> BuscarCat(string cat)
        {
            var catParameter = cat != null ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarCat_Result>("BuscarCat", catParameter);
        }
    
        public virtual ObjectResult<BuscarEstado_Result> BuscarEstado(string estadob)
        {
            var estadobParameter = estadob != null ?
                new ObjectParameter("estadob", estadob) :
                new ObjectParameter("estadob", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarEstado_Result>("BuscarEstado", estadobParameter);
        }
    
        public virtual ObjectResult<BuscarPais_Result> BuscarPais(string nom)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("Nom", nom) :
                new ObjectParameter("Nom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarPais_Result>("BuscarPais", nomParameter);
        }
    
        public virtual ObjectResult<BuscarTPago_Result> BuscarTPago(string busque)
        {
            var busqueParameter = busque != null ?
                new ObjectParameter("busque", busque) :
                new ObjectParameter("busque", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarTPago_Result>("BuscarTPago", busqueParameter);
        }
    
        public virtual ObjectResult<string> ChanceStatusCompras(Nullable<int> idstatus, Nullable<int> idbuy)
        {
            var idstatusParameter = idstatus.HasValue ?
                new ObjectParameter("idstatus", idstatus) :
                new ObjectParameter("idstatus", typeof(int));
    
            var idbuyParameter = idbuy.HasValue ?
                new ObjectParameter("idbuy", idbuy) :
                new ObjectParameter("idbuy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ChanceStatusCompras", idstatusParameter, idbuyParameter);
        }
    
        public virtual ObjectResult<string> DeleteProducto(Nullable<int> idP)
        {
            var idPParameter = idP.HasValue ?
                new ObjectParameter("IdP", idP) :
                new ObjectParameter("IdP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteProducto", idPParameter);
        }
    
        public virtual ObjectResult<string> DisableAdmin(Nullable<int> idadmin, Nullable<int> idesta)
        {
            var idadminParameter = idadmin.HasValue ?
                new ObjectParameter("idadmin", idadmin) :
                new ObjectParameter("idadmin", typeof(int));
    
            var idestaParameter = idesta.HasValue ?
                new ObjectParameter("idesta", idesta) :
                new ObjectParameter("idesta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DisableAdmin", idadminParameter, idestaParameter);
        }
    
        public virtual ObjectResult<string> DisablePersonaXCustumer(Nullable<int> idcustume, Nullable<int> idestado)
        {
            var idcustumeParameter = idcustume.HasValue ?
                new ObjectParameter("idcustume", idcustume) :
                new ObjectParameter("idcustume", typeof(int));
    
            var idestadoParameter = idestado.HasValue ?
                new ObjectParameter("idestado", idestado) :
                new ObjectParameter("idestado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DisablePersonaXCustumer", idcustumeParameter, idestadoParameter);
        }
    
        public virtual int EliminarCat(Nullable<int> catI)
        {
            var catIParameter = catI.HasValue ?
                new ObjectParameter("catI", catI) :
                new ObjectParameter("catI", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCat", catIParameter);
        }
    
        public virtual int EliminarEstado(Nullable<int> estadoId)
        {
            var estadoIdParameter = estadoId.HasValue ?
                new ObjectParameter("EstadoId", estadoId) :
                new ObjectParameter("EstadoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarEstado", estadoIdParameter);
        }
    
        public virtual int EliminarPais(Nullable<int> idP)
        {
            var idPParameter = idP.HasValue ?
                new ObjectParameter("IdP", idP) :
                new ObjectParameter("IdP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarPais", idPParameter);
        }
    
        public virtual int EliminarTPago(Nullable<int> idT)
        {
            var idTParameter = idT.HasValue ?
                new ObjectParameter("IdT", idT) :
                new ObjectParameter("IdT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarTPago", idTParameter);
        }
    
        public virtual int InsertarEstado(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarEstado", estadoParameter);
        }
    
        public virtual int InsertarPais(string pais)
        {
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarPais", paisParameter);
        }
    
        public virtual int InsertarTPago(string tipo)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarTPago", tipoParameter);
        }
    
        public virtual ObjectResult<LeerCat_Result> LeerCat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LeerCat_Result>("LeerCat");
        }
    
        public virtual ObjectResult<ListarPais_Result> ListarPais()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarPais_Result>("ListarPais");
        }
    
        public virtual ObjectResult<ListarTPago_Result> ListarTPago()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarTPago_Result>("ListarTPago");
        }
    
        public virtual ObjectResult<LoginU_Result> LoginU(string user, string password)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginU_Result>("LoginU", userParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> RecordAdminXFolk(string name, string lastname, Nullable<int> old, string phone, Nullable<int> idcountry, string user, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var oldParameter = old.HasValue ?
                new ObjectParameter("old", old) :
                new ObjectParameter("old", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var idcountryParameter = idcountry.HasValue ?
                new ObjectParameter("idcountry", idcountry) :
                new ObjectParameter("idcountry", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RecordAdminXFolk", nameParameter, lastnameParameter, oldParameter, phoneParameter, idcountryParameter, userParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> RecordCard(string placeHolder, string number, Nullable<System.DateTime> dateexpe, Nullable<int> secPin, Nullable<int> idest, Nullable<int> idusuario)
        {
            var placeHolderParameter = placeHolder != null ?
                new ObjectParameter("PlaceHolder", placeHolder) :
                new ObjectParameter("PlaceHolder", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var dateexpeParameter = dateexpe.HasValue ?
                new ObjectParameter("dateexpe", dateexpe) :
                new ObjectParameter("dateexpe", typeof(System.DateTime));
    
            var secPinParameter = secPin.HasValue ?
                new ObjectParameter("SecPin", secPin) :
                new ObjectParameter("SecPin", typeof(int));
    
            var idestParameter = idest.HasValue ?
                new ObjectParameter("idest", idest) :
                new ObjectParameter("idest", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RecordCard", placeHolderParameter, numberParameter, dateexpeParameter, secPinParameter, idestParameter, idusuarioParameter);
        }
    
        public virtual ObjectResult<string> RecordCompra(Nullable<System.DateTime> datebuy, Nullable<int> idpaytype, Nullable<double> iVA, Nullable<double> total, Nullable<int> idcostume)
        {
            var datebuyParameter = datebuy.HasValue ?
                new ObjectParameter("datebuy", datebuy) :
                new ObjectParameter("datebuy", typeof(System.DateTime));
    
            var idpaytypeParameter = idpaytype.HasValue ?
                new ObjectParameter("idpaytype", idpaytype) :
                new ObjectParameter("idpaytype", typeof(int));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(double));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            var idcostumeParameter = idcostume.HasValue ?
                new ObjectParameter("idcostume", idcostume) :
                new ObjectParameter("idcostume", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RecordCompra", datebuyParameter, idpaytypeParameter, iVAParameter, totalParameter, idcostumeParameter);
        }
    
        public virtual int RecordDetalleCompra(Nullable<int> idcompra, Nullable<int> idproduct, Nullable<double> precio, Nullable<double> discount, Nullable<int> cantidad, ObjectParameter msg)
        {
            var idcompraParameter = idcompra.HasValue ?
                new ObjectParameter("idcompra", idcompra) :
                new ObjectParameter("idcompra", typeof(int));
    
            var idproductParameter = idproduct.HasValue ?
                new ObjectParameter("idproduct", idproduct) :
                new ObjectParameter("idproduct", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(double));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordDetalleCompra", idcompraParameter, idproductParameter, precioParameter, discountParameter, cantidadParameter, msg);
        }
    
        public virtual ObjectResult<string> RecordPersonaXcostumer(string name, string lastname, Nullable<int> old, string phone, Nullable<int> idcountry, string user, string addres, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var oldParameter = old.HasValue ?
                new ObjectParameter("old", old) :
                new ObjectParameter("old", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var idcountryParameter = idcountry.HasValue ?
                new ObjectParameter("idcountry", idcountry) :
                new ObjectParameter("idcountry", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var addresParameter = addres != null ?
                new ObjectParameter("addres", addres) :
                new ObjectParameter("addres", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RecordPersonaXcostumer", nameParameter, lastnameParameter, oldParameter, phoneParameter, idcountryParameter, userParameter, addresParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> RecordProductos(string name, string descript, string image, Nullable<double> price, Nullable<int> existence, Nullable<int> rate, Nullable<int> idcat, string detalles)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptParameter = descript != null ?
                new ObjectParameter("descript", descript) :
                new ObjectParameter("descript", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            var existenceParameter = existence.HasValue ?
                new ObjectParameter("existence", existence) :
                new ObjectParameter("existence", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(int));
    
            var idcatParameter = idcat.HasValue ?
                new ObjectParameter("Idcat", idcat) :
                new ObjectParameter("Idcat", typeof(int));
    
            var detallesParameter = detalles != null ?
                new ObjectParameter("detalles", detalles) :
                new ObjectParameter("detalles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RecordProductos", nameParameter, descriptParameter, imageParameter, priceParameter, existenceParameter, rateParameter, idcatParameter, detallesParameter);
        }
    
        public virtual ObjectResult<string> RecordWishList(Nullable<int> idproducto, Nullable<int> idusuario)
        {
            var idproductoParameter = idproducto.HasValue ?
                new ObjectParameter("idproducto", idproducto) :
                new ObjectParameter("idproducto", typeof(int));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RecordWishList", idproductoParameter, idusuarioParameter);
        }
    
        public virtual ObjectResult<SearchAdmin_Result> SearchAdmin(string dat)
        {
            var datParameter = dat != null ?
                new ObjectParameter("dat", dat) :
                new ObjectParameter("dat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchAdmin_Result>("SearchAdmin", datParameter);
        }
    
        public virtual ObjectResult<SearchCard_Result> SearchCard(string dat)
        {
            var datParameter = dat != null ?
                new ObjectParameter("dat", dat) :
                new ObjectParameter("dat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchCard_Result>("SearchCard", datParameter);
        }
    
        public virtual ObjectResult<SearchCompras_Result> SearchCompras(string data)
        {
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchCompras_Result>("SearchCompras", dataParameter);
        }
    
        public virtual ObjectResult<SearchCustumer_Result> SearchCustumer(string dat)
        {
            var datParameter = dat != null ?
                new ObjectParameter("dat", dat) :
                new ObjectParameter("dat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchCustumer_Result>("SearchCustumer", datParameter);
        }
    
        public virtual ObjectResult<SearchDetalleCompra_Result> SearchDetalleCompra(string data, ObjectParameter msg)
        {
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchDetalleCompra_Result>("SearchDetalleCompra", dataParameter, msg);
        }
    
        public virtual ObjectResult<SearchProducts_Result> SearchProducts(string data)
        {
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchProducts_Result>("SearchProducts", dataParameter);
        }
    
        public virtual ObjectResult<ShowadminXfolk_Result> ShowadminXfolk()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowadminXfolk_Result>("ShowadminXfolk");
        }
    
        public virtual ObjectResult<ShowCard_Result> ShowCard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowCard_Result>("ShowCard");
        }
    
        public virtual ObjectResult<ShowCompras_Result> ShowCompras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowCompras_Result>("ShowCompras");
        }
    
        public virtual ObjectResult<ShowCostumerXPersona_Result> ShowCostumerXPersona()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowCostumerXPersona_Result>("ShowCostumerXPersona");
        }
    
        public virtual ObjectResult<ShowCostumerXPersonabyId_Result> ShowCostumerXPersonabyId(Nullable<int> idperson)
        {
            var idpersonParameter = idperson.HasValue ?
                new ObjectParameter("idperson", idperson) :
                new ObjectParameter("idperson", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowCostumerXPersonabyId_Result>("ShowCostumerXPersonabyId", idpersonParameter);
        }
    
        public virtual ObjectResult<ShowProducts_Result> ShowProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowProducts_Result>("ShowProducts");
        }
    
        public virtual ObjectResult<ShowProductsbyID_Result> ShowProductsbyID(Nullable<int> idproducto)
        {
            var idproductoParameter = idproducto.HasValue ?
                new ObjectParameter("idproducto", idproducto) :
                new ObjectParameter("idproducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowProductsbyID_Result>("ShowProductsbyID", idproductoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> UpdateCard(Nullable<int> idcard, Nullable<int> idest)
        {
            var idcardParameter = idcard.HasValue ?
                new ObjectParameter("idcard", idcard) :
                new ObjectParameter("idcard", typeof(int));
    
            var idestParameter = idest.HasValue ?
                new ObjectParameter("idest", idest) :
                new ObjectParameter("idest", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateCard", idcardParameter, idestParameter);
        }
    
        public virtual ObjectResult<string> UpdateCompras(Nullable<int> idbuy, Nullable<System.DateTime> datebuy, Nullable<int> idpaytype, Nullable<double> total, Nullable<int> idcustumer, Nullable<int> idestado)
        {
            var idbuyParameter = idbuy.HasValue ?
                new ObjectParameter("idbuy", idbuy) :
                new ObjectParameter("idbuy", typeof(int));
    
            var datebuyParameter = datebuy.HasValue ?
                new ObjectParameter("datebuy", datebuy) :
                new ObjectParameter("datebuy", typeof(System.DateTime));
    
            var idpaytypeParameter = idpaytype.HasValue ?
                new ObjectParameter("idpaytype", idpaytype) :
                new ObjectParameter("idpaytype", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            var idcustumerParameter = idcustumer.HasValue ?
                new ObjectParameter("idcustumer", idcustumer) :
                new ObjectParameter("idcustumer", typeof(int));
    
            var idestadoParameter = idestado.HasValue ?
                new ObjectParameter("idestado", idestado) :
                new ObjectParameter("idestado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateCompras", idbuyParameter, datebuyParameter, idpaytypeParameter, totalParameter, idcustumerParameter, idestadoParameter);
        }
    
        public virtual int UpdateDetalleCompra(Nullable<int> idcompra, Nullable<int> idproducto, Nullable<double> precio, Nullable<double> descuento, Nullable<int> cantidad, ObjectParameter msg)
        {
            var idcompraParameter = idcompra.HasValue ?
                new ObjectParameter("idcompra", idcompra) :
                new ObjectParameter("idcompra", typeof(int));
    
            var idproductoParameter = idproducto.HasValue ?
                new ObjectParameter("idproducto", idproducto) :
                new ObjectParameter("idproducto", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(double));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDetalleCompra", idcompraParameter, idproductoParameter, precioParameter, descuentoParameter, cantidadParameter, msg);
        }
    
        public virtual ObjectResult<string> UpdatePersonaXAdmin(Nullable<int> idfolk, string name, string lastname, Nullable<int> old, string phone, Nullable<int> idpais, Nullable<int> idestadoP, string user, string password, Nullable<int> idestadoA)
        {
            var idfolkParameter = idfolk.HasValue ?
                new ObjectParameter("idfolk", idfolk) :
                new ObjectParameter("idfolk", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var oldParameter = old.HasValue ?
                new ObjectParameter("old", old) :
                new ObjectParameter("old", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var idpaisParameter = idpais.HasValue ?
                new ObjectParameter("idpais", idpais) :
                new ObjectParameter("idpais", typeof(int));
    
            var idestadoPParameter = idestadoP.HasValue ?
                new ObjectParameter("idestadoP", idestadoP) :
                new ObjectParameter("idestadoP", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var idestadoAParameter = idestadoA.HasValue ?
                new ObjectParameter("idestadoA", idestadoA) :
                new ObjectParameter("idestadoA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdatePersonaXAdmin", idfolkParameter, nameParameter, lastnameParameter, oldParameter, phoneParameter, idpaisParameter, idestadoPParameter, userParameter, passwordParameter, idestadoAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UpdatePersonaXCustumer(Nullable<int> idfolk, string name, string lastname, Nullable<int> old, string phone, Nullable<int> idpais, string usuario, string address, string password)
        {
            var idfolkParameter = idfolk.HasValue ?
                new ObjectParameter("idfolk", idfolk) :
                new ObjectParameter("idfolk", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var oldParameter = old.HasValue ?
                new ObjectParameter("old", old) :
                new ObjectParameter("old", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var idpaisParameter = idpais.HasValue ?
                new ObjectParameter("idpais", idpais) :
                new ObjectParameter("idpais", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdatePersonaXCustumer", idfolkParameter, nameParameter, lastnameParameter, oldParameter, phoneParameter, idpaisParameter, usuarioParameter, addressParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> UpdateProducto(Nullable<int> idP, string name, string descript, string img, Nullable<double> price, Nullable<int> existence, Nullable<int> idest, Nullable<int> idcat, string detalles)
        {
            var idPParameter = idP.HasValue ?
                new ObjectParameter("IdP", idP) :
                new ObjectParameter("IdP", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptParameter = descript != null ?
                new ObjectParameter("descript", descript) :
                new ObjectParameter("descript", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            var existenceParameter = existence.HasValue ?
                new ObjectParameter("existence", existence) :
                new ObjectParameter("existence", typeof(int));
    
            var idestParameter = idest.HasValue ?
                new ObjectParameter("idest", idest) :
                new ObjectParameter("idest", typeof(int));
    
            var idcatParameter = idcat.HasValue ?
                new ObjectParameter("idcat", idcat) :
                new ObjectParameter("idcat", typeof(int));
    
            var detallesParameter = detalles != null ?
                new ObjectParameter("detalles", detalles) :
                new ObjectParameter("detalles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateProducto", idPParameter, nameParameter, descriptParameter, imgParameter, priceParameter, existenceParameter, idestParameter, idcatParameter, detallesParameter);
        }
    
        public virtual ObjectResult<VeerEstados_Result> VeerEstados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VeerEstados_Result>("VeerEstados");
        }
    }
}
